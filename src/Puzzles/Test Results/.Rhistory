stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Execution Time by Puzzle Size",
x = "Puzzle Size",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1),
legend.position = "top"
)
# Line Plot Time vs Size
ggplot(comp_data, aes(x = SIZE, y = EXECUTION_TIME)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Execution Time by Puzzle Size",
x = "Puzzle Size",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16), # Bigger title
axis.title.x = element_text(size = 14), # Bigger x-axis label
axis.title.y = element_text(size = 14), # Bigger y-axis label
axis.text.x = element_text(hjust = 1, size = 12), # Adjust x-axis tick labels
axis.text.y = element_text(size = 12), # Adjust y-axis tick labels
legend.position = "top"
)
# Line Plot Time vs Size
ggplot(comp_data, aes(x = SIZE, y = EXECUTION_TIME)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Execution Time by Puzzle Size",
x = "Puzzle Size",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20), # Bigger title
axis.title.x = element_text(size = 18), # Bigger x-axis label
axis.title.y = element_text(size = 18), # Bigger y-axis label
axis.text.x = element_text(hjust = 1, size = 16), # Adjust x-axis tick labels
axis.text.y = element_text(size = 16), # Adjust y-axis tick labels
legend.position = "top"
)
# Line Plot of Time vs. Max Path Length
ggplot(comp_data, aes(x = MAX_PATH_LENGTH, y = EXECUTION_TIME)) +
# Max execution time (red solid)
stat_summary(
fun = max,
geom = "line",
aes(group = 1, color = "Maximum Execution Time", linetype = "Maximum Execution Time"),
size = 1.1
) +
# Mean execution time (orange dashed)
stat_summary(
fun = mean,
geom = "line",
aes(group = 1, color = "Mean Execution Time", linetype = "Mean Execution Time"),
size = 1.2
) +
# Min execution time (yellow solid)
stat_summary(
fun = min,
geom = "line",
aes(group = 1, color = "Minimum Execution Time", linetype = "Minimum Execution Time"),
size = 1.1
) +
scale_color_manual(
name = "Legend",
values = c(
"Mean Execution Time" = "red",
"Maximum Execution Time" = "blue",
"Minimum Execution Time" = "dodgerblue"
)
) +
scale_linetype_manual(
name = "Legend",
values = c(
"Mean Execution Time" = "dashed",
"Maximum Execution Time" = "solid",
"Minimum Execution Time" = "solid"
)
) +
scale_x_continuous(breaks = min(comp_data$MAX_PATH_LENGTH):max(comp_data$MAX_PATH_LENGTH)) +
labs(
title = "Execution Time by Maximum Path Length",
x = "Maximum Path Length",
y = "Execution Time (log"["  10"]*" ms)"
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20), # Bigger title
axis.title.x = element_text(size = 18), # Bigger x-axis label
axis.title.y = element_text(size = 18), # Bigger y-axis label
axis.text.x = element_text(hjust = 1, size = 16), # Adjust x-axis tick labels
axis.text.y = element_text(size = 16), # Adjust y-axis tick labels
legend.position = "top"
)
# Line Plot of Time vs. Max Path Length
ggplot(comp_data, aes(x = MAX_PATH_LENGTH, y = EXECUTION_TIME)) +
# Max execution time (red solid)
stat_summary(
fun = max,
geom = "line",
aes(group = 1, color = "Maximum Execution Time", linetype = "Maximum Execution Time"),
size = 1.1
) +
# Mean execution time (orange dashed)
stat_summary(
fun = mean,
geom = "line",
aes(group = 1, color = "Mean Execution Time", linetype = "Mean Execution Time"),
size = 1.2
) +
# Min execution time (yellow solid)
stat_summary(
fun = min,
geom = "line",
aes(group = 1, color = "Minimum Execution Time", linetype = "Minimum Execution Time"),
size = 1.1
) +
scale_color_manual(
name = "Legend",
values = c(
"Mean Execution Time" = "red",
"Maximum Execution Time" = "blue",
"Minimum Execution Time" = "dodgerblue"
)
) +
scale_linetype_manual(
name = "Legend",
values = c(
"Mean Execution Time" = "dashed",
"Maximum Execution Time" = "solid",
"Minimum Execution Time" = "solid"
)
) +
scale_x_continuous(breaks = min(comp_data$MAX_PATH_LENGTH):max(comp_data$MAX_PATH_LENGTH)) +
labs(
title = "Execution Time by Maximum Path Length",
x = "Maximum Path Length",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20), # Bigger title
axis.title.x = element_text(size = 18), # Bigger x-axis label
axis.title.y = element_text(size = 18), # Bigger y-axis label
axis.text.x = element_text(hjust = 1, size = 16), # Adjust x-axis tick labels
axis.text.y = element_text(size = 16), # Adjust y-axis tick labels
legend.position = "top"
)
# Line Plot Time vs Max Path Length with Error Bars
ggplot(comp_data, aes(x = MAX_PATH_LENGTH, y = EXECUTION_TIME)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$MAX_PATH_LENGTH):max(comp_data$MAX_PATH_LENGTH)) +
scale_y_log10() +
labs(
title = "Execution Time by Maximum Path Length",
x = "Maximum Path Length",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20), # Bigger title
axis.title.x = element_text(size = 18), # Bigger x-axis label
axis.title.y = element_text(size = 18), # Bigger y-axis label
axis.text.x = element_text(hjust = 1, size = 16), # Adjust x-axis tick labels
axis.text.y = element_text(size = 16), # Adjust y-axis tick labels
legend.position = "top"
)
# Line Plot Time vs Max Path Length with Error Bars
ggplot(comp_data, aes(x = MAX_PATH_LENGTH, y = EXECUTION_TIME)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(
breaks = seq(min(comp_data$MAX_PATH_LENGTH), max(comp_data$MAX_PATH_LENGTH), by = 2)
) +
scale_y_log10() +
labs(
title = "Execution Time by Maximum Path Length",
x = "Maximum Path Length",
y = expression("Execution Time (log"["10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(hjust = 1, size = 16),
axis.text.y = element_text(size = 16),
legend.position = "top"
)
# Scatter Plot of Nodes Expanded vs. Size
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
geom_point(aes(color = "Data")) +
stat_summary(
fun = mean,
geom = "line",
aes(group = 1, color = "Mean Execution Time"),
size = 1.2
) +
scale_color_manual(
name = "Legend",
values = c("Data" = "black", "Mean Execution Time" = "red")
) +
scale_y_log10() +
scale_x_continuous(breaks = unique(comp_data$SIZE)) +
labs(
title = "Execution Time by Problem Size",
x = "Problem Size",
y = "Execution Time (log scale)"
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
legend.position = "top",
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1)
)
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Execution Time by Number of Agents",
x = "Number of Agents",
y = "Execution Time (log"["  10"]*" ms)"
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1),
legend.position = "top"
)
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Execution Time" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Execution Time by Number of Agents",
x = "Number of Agents",
y = expression("Execution Time (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1),
legend.position = "top"
)
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Nodes Expanded" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Nodes Expanded by Puzzle Size",
x = "Sizes",
y = expression("Nodes Expanded (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1),
legend.position = "top"
)
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Execution Time"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Nodes Expanded (log"["  10"]*" ms)" = "red", "Min/Max Range" = "darkblue")
ggplot(comp_data, aes(x = SIZE, y = NODES_EXPANDED)) +
# Mean line (red)
stat_summary(
fun = mean,
geom = "line",
aes(color = "Mean Nodes Expanded"),
size = 1.2
) +
# Error bars (min/max range, dark blue)
stat_summary(
fun.data = function(x) c(y = mean(x), ymin = min(x), ymax = max(x)),
geom = "errorbar",
aes(color = "Min/Max Range"),
width = 0.2,
size = 0.8
) +
scale_color_manual(
name = "Legend",
values = c("Mean Nodes Expanded" = "red", "Min/Max Range" = "darkblue")
) +
scale_x_continuous(breaks = min(comp_data$SIZE):max(comp_data$SIZE)) +
scale_y_log10() +
labs(
title = "Nodes Expanded by Puzzle Size",
x = "Sizes",
y = expression("Nodes Expanded (log"["  10"]*" ms)")
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(hjust = 1),
legend.position = "top"
)
succ_rate_data <- comp_data %>%
group_by(SIZE) %>%
summarise(SUCC_RATE = count(SUCCESS) / n())
succ_rate_data <- comp_data %>%
group_by(SIZE) %>%
summarise(SUCC_RATE = sum(SUCCESS) / n())
View(succ_rate_data)
succ_rate_data <- comp_data %>%
group_by(SIZE) %>%
summarise(SUCC_RATE = sum(EXECUTION_TIME < 180000) / n())
ggplot(succ_rate_data, aes(x = SIZE, y = SUCC_RATE)) +
geom_line(color = "red", size = 1.2) +
scale_x_continuous(
breaks = seq(min(succ_rate_data$SIZE), max(succ_rate_data$SIZE), by = 2)
) +
scale_y_continuous(
labels = scales::percent_format(accuracy = 1),
limits = c(0, 1)
) +
labs(
title = "Success Rate by Puzzle Size",
x = "Puzzle Size",
y = "Success Rate"
) +
theme_minimal(base_size = 12) +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
plot.title = element_text(hjust = 0.5, face = "bold", size = 20),
axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18),
axis.text.x = element_text(hjust = 1, size = 16),
axis.text.y = element_text(size = 16),
legend.position = "none"
)
